# These are project properties used for the Docusaurus sites.
#
# See:
# - https://docs.gradle.org/current/userguide/writing_build_scripts.html#sec:standard_project_properties

# The comma separated list of other Gradle subprojects to import the
# API documentation from.
# Each entry must be a Gradle subproject in Gradle's format, using ':' as
# path separators. Example:
#   :src:go:app,:src:rust:app
# The projects listed here must have a configuration named 'apiDocumentation',
# exporting zero or more tar archives containing the API documents that the
# 'producer' project exports. If any of these project doesn't have a
# 'apiDocumentation' configuration an error is raised by the Gradle script.
# You can control which contents to include or exclude as well as
# transforming their paths and names with the 'importAPIDocumentationCopySpec'
# property below.
# Leave this property empty or undefined if you don't need to import binaries
# from other projects.
# Note that these contents should always be ignored by Git so make sure the
# .gitignore file in the target directories always ignores the imported
# contents.
importAPIDocumentationFrom=:src:docker:nyx

# The settings that allow you to fine control how the contents from the
# various API documentation archives imported by other projects are extracted
# into this site. This same specification is used for all API documentation
# archives imported by subprojects so you can define the mappings for all of
# them into this spec.
# Documentation is imported from the projects listed in the
# 'importAPIDocumentationFrom' property, so make sure the project(s) you want
# to import the documentation from are listed in 'importAPIDocumentationFrom'.
# These settings are made of rules, each representing some contents to fetch
# from the API documentation archives. Contents are not imported by default
# unless they match some of these rules so, by default, they are all ignored.
# Rules are specified as part of this value in the form of a JSON configuration.
# You are suggested to use a multi-line value here (use '\' for each new line)
# for improved readability.
# Rules are contained in the root element 'rules', with one child entry for each
# rule. Each rules has children:
# - 'from' specifying the path of contents, in any of the imported API archives.
#   The 'from' attribute is mandatory
# - 'into' lets you declare the target directory, relative to this site. You
#   should always use 'docs' here or one of its subdirectories and only in
#   very particular circumstances use the 'pages' directory. Do not use any
#   other directory. The 'into' attribute is mandatory
# - 'include' and 'exclude' allow you to filter contents globally and they are
#   lists of glob patterns to let you select the contents to move. The
#   'include' and 'exclude' options are optional
# - 'rename' is a list of child anonymous objects, each with two mandatory
#   attributes: 'from' and 'to', where you can use regular expressions to
#   match the names of the files (not directories) that you want to rename
#   ('from') and the new names ('to'). You can use capture groups here.
#   The 'rename' option is optional. Example: 'from': '(.*)_OEM_BLUE_(.*)',
#   'to': '$1$2'.
# Note that the imported contents should always be ignored by Git so make sure
# the .gitignore file in the target directories always ignores the imported
# contents.
# This property is ignored when 'importApiDocumentation' does not define any
# projects to import the documentation from.
importAPIDocumentationCopySpec={\
    "rules": [\
      {\
        "from": "docker",\
        "into": "docs/reference/docker",\
        "include": [\
          "**/*.md"\
        ]\
      }\
    ]\
  }
