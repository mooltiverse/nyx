# We don't have real code coverage check envforcement because in order to cover an acceptable percentage
# of code we need to run unit, integration and functional tests.
# As the reports show at https://app.codecov.io/gh/mooltiverse/nyx/flags, these tests are identified
# by flags and their sum is very high, although we couldn't yet find a way to aggregate them to have an
# overall coverage that we can set constraints on.
# So the check below are very loose, see
# - 'threshold', which is extremely high
# - 'informational', which basically makes Codecov just provide stats, rather than gatekeeping on metrics
#
# Reference for this file is at: https://docs.codecov.com/docs/codecovyml-reference
codecov:
  require_ci_to_pass: true

coverage:
  precision: 2
  round: down
  range: "70...100"
  status:
    project:
      default:
        target: 80%
        threshold: 80% # this threshold is so high for the reasons on top of this file
        informational: true
      java-main:
        paths:
          - modules/java/main*
      java-version:
        paths:
          - modules/java/version*
      java-gradle:
        paths:
          - modules/java/gradle*
      go-main:
        paths:
          - modules/go/nyx*
          - modules/go/errors*
          - modules/go/utils*
      go-version:
        paths:
          - modules/go/version*
    patch:
      default:
        target: 80%
        threshold: 80% # this threshold is so high for the reasons on top of this file
        informational: true
      java-main:
        paths:
          - modules/java/main*
      java-version:
        paths:
          - modules/java/version*
      java-gradle:
        paths:
          - modules/java/gradle*
      go-main:
        paths:
          - modules/go/nyx*
          - modules/go/errors*
          - modules/go/utils*
      go-version:
        paths:
          - modules/go/version*

flag_management:
  default_rules:
    carryforward: false

# This block configures the comment that will appear in GitHub's pull requests
comment:
  layout: "header, diff, flags, components"
