--- 
# starting from the "simple" preset gives us:
# - the Conventional Commits convention
# - the "mainline" and "internal" release types (that we override here)
preset: "simple"
releaseAssets: 
  nyx-darwin-amd64:
    fileName: "nyx-darwin-amd64"
    description: "Nyx {{version}} Binary for Darwin-amd64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-darwin-amd64"
  nyx-darwin-arm64:
    fileName: "nyx-darwin-arm64"
    description: "Nyx {{version}} Binary for Darwin-arm64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-darwin-arm64"
  nyx-dragonfly-amd64:
    fileName: "nyx-dragonfly-amd64"
    description: "Nyx {{version}} Binary for Dragonfly-amd64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-dragonfly-amd64"
  nyx-freebsd-386:
    fileName: "nyx-freebsd-386"
    description: "Nyx {{version}} Binary for FreeBSD-386"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-freebsd-386"
  nyx-freebsd-amd64:
    fileName: "nyx-freebsd-amd64"
    description: "Nyx {{version}} Binary for FreeBSD-amd64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-freebsd-amd64"
  nyx-freebsd-arm:
    fileName: "nyx-freebsd-arm"
    description: "Nyx {{version}} Binary for FreeBSD-arm"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-freebsd-arm"
  nyx-linux-386:
    fileName: "nyx-linux-386"
    description: "Nyx {{version}} Binary for Linux-386"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-linux-386"
  nyx-linux-amd64:
    fileName: "nyx-linux-amd64"
    description: "Nyx {{version}} Binary for Linux-amd64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-linux-amd64"
  nyx-linux-arm:
    fileName: "nyx-linux-arm"
    description: "Nyx {{version}} Binary for Linux-arm"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-linux-arm"
  nyx-linux-arm64:
    fileName: "nyx-linux-arm64"
    description: "Nyx {{version}} Binary for Linux-arm64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-linux-arm64"
  nyx-linux-mips:
    fileName: "nyx-linux-mips"
    description: "Nyx {{version}} Binary for Linux-mips"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-linux-mips"
  nyx-linux-mips64:
    fileName: "nyx-linux-mips64"
    description: "Nyx {{version}} Binary for Linux-mips64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-linux-mips64"
  nyx-linux-mips64le:
    fileName: "nyx-linux-mips64le"
    description: "Nyx {{version}} Binary for Linux-mips64le"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-linux-mips64le"
  nyx-linux-mipsle:
    fileName: "nyx-linux-mipsle"
    description: "Nyx {{version}} Binary for Linux-mipsle"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-linux-mipsle"
  nyx-linux-ppc64:
    fileName: "nyx-linux-ppc64"
    description: "Nyx {{version}} Binary for Linux-ppc64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-linux-ppc64"
  nyx-linux-ppc64le:
    fileName: "nyx-linux-ppc64le"
    description: "Nyx {{version}} Binary for Linux-ppc64le"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-linux-ppc64le"
  nyx-netbsd-386:
    fileName: "nyx-netbsd-386"
    description: "Nyx {{version}} Binary for NetBSD-386"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-netbsd-386"
  nyx-netbsd-amd64:
    fileName: "nyx-netbsd-amd64"
    description: "Nyx {{version}} Binary for NetBSD-amd64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-netbsd-amd64"
  nyx-netbsd-arm:
    fileName: "nyx-netbsd-arm"
    description: "Nyx {{version}} Binary for NetBSD-arm"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-netbsd-arm"
  nyx-openbsd-386:
    fileName: "nyx-openbsd-386"
    description: "Nyx {{version}} Binary for OpenBSD-386"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-openbsd-386"
  nyx-openbsd-amd64:
    fileName: "nyx-openbsd-amd64"
    description: "Nyx {{version}} Binary for OpenBSD-amd64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-openbsd-amd64"
  nyx-openbsd-arm:
    fileName: "nyx-openbsd-arm"
    description: "Nyx {{version}} Binary for OpenBSD-arm"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-openbsd-arm"
  nyx-openbsd-arm64:
    fileName: "nyx-openbsd-arm64"
    description: "Nyx {{version}} Binary for OpenBSD-arm64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-openbsd-arm64"
  nyx-solaris-amd64:
    fileName: "nyx-solaris-amd64"
    description: "Nyx {{version}} Binary for Solaris-amd64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-solaris-amd64"
  nyx-windows-386.exe:
    fileName: "nyx-windows-386.exe"
    description: "Nyx {{version}} Binary for Windows-386"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-windows-386.exe"
  nyx-windows-amd64.exe:
    fileName: "nyx-windows-amd64.exe"
    description: "Nyx {{version}} Binary for Windows-amd64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-windows-amd64.exe"
  nyx-windows-arm.exe:
    fileName: "nyx-windows-arm.exe"
    description: "Nyx {{version}} Binary for Windows-arm"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-windows-arm.exe"
  nyx-windows-arm64.exe:
    fileName: "nyx-windows-arm64.exe"
    description: "Nyx {{version}} Binary for Windows-arm64"
    type: "application/octet-stream"
    path: "modules/go/nyx/build/bin/nyx-windows-arm64.exe"
changelog:
  path: "build/CHANGELOG.md"
  template: "config/CHANGELOG.tpl"
  sections:
    "Added": "^feat$"
    "Fixed": "^fix$"
  substitutions:
    "(?m)#([0-9]+)(?s)": "[#%s](https://github.com/mooltiverse/nyx/issues/%s)"
    "(?m)\\[([a-z0-9]+)\\](?s)": "[[%s](https://github.com/mooltiverse/nyx/commit/%s)]"
releaseTypes: 
  enabled: 
    - mainline
    - maturity
    - integration
    - fix
    - hotfix
    - feature
    - release
    - maintenance
    - internal
  publicationServices: 
    - github
  items: 
    # "mainline" overrides the release type with the same name from the preset
    mainline:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(master|main)$"
      matchEnvironmentVariables: 
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "true"
    maturity:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)(\\.([0-9]\\d*))?)?$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)$"
      matchEnvironmentVariables: 
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "true"
      publishPreRelease: "true"
    integration:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(develop|development|integration|latest)(\\.([0-9]\\d*))?)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(develop|development|integration|latest)$"
      matchEnvironmentVariables: 
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "true"
      publishPreRelease: "true"
    feature:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(feat|feature)(([0-9a-zA-Z]*)(\\.([0-9]\\d*))?)?)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(feat|feature)((-|\\/)[0-9a-zA-Z-_]+)?$"
      matchEnvironmentVariables: 
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "false"
      publishPreRelease: "false"
    fix:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-fix(([0-9a-zA-Z]*)(\\.([0-9]\\d*))?)?)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^fix((-|\\/)[0-9a-zA-Z-_]+)?$"
      matchEnvironmentVariables: 
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "false"
      publishPreRelease: "false"
    hotfix:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-hotfix(([0-9a-zA-Z]*)(\\.([0-9]\\d*))?)?)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^hotfix((-|\\/)[0-9a-zA-Z-_]+)?$"
      matchEnvironmentVariables: 
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "true"
      publishPreRelease: "true"
    release:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#firstLower}}{{branch}}{{/firstLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(rel|release)((\\.([0-9]\\d*))?)?)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(rel|release)(-|\\/)({{configuration.releasePrefix}})?([0-9|x]\\d*)(\\.([0-9|x]\\d*)(\\.([0-9|x]\\d*))?)?$"
      matchEnvironmentVariables: 
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "false"
      versionRangeFromBranchName: true
    maintenance:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^[a-zA-Z]*([0-9|x]\\d*)(\\.([0-9|x]\\d*)(\\.([0-9|x]\\d*))?)?$"
      matchEnvironmentVariables: 
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "true"
      versionRangeFromBranchName: true
    # "internal" overrides the release type with the same name from the preset adding some qualifiers and is the global fallback for all release types
    internal:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "internal"
      gitPush: "false"
      gitTag: "false"
      identifiers: 
        -
          qualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
          position: "BUILD"
        -
          qualifier: "{{#short5}}{{releaseScope.finalCommit}}{{/short5}}"
          position: "BUILD"
        -
          qualifier: "{{#timestampYYYYMMDDHHMMSS}}{{timestamp}}{{/timestampYYYYMMDDHHMMSS}}"
          position: "BUILD"
      publish: "false"
      publishPreRelease: "false"
services: 
  github: 
    type: "GITHUB"
    options: 
      # The GH_TOKEN variable is fetched from the "secrets" context and passed as an environment variable.
      # See:
      # - https://docs.github.com/en/actions/security-guides/automatic-token-authentication
      # - https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      AUTHENTICATION_TOKEN: "{{#environmentVariable}}GH_TOKEN{{/environmentVariable}}"
      REPOSITORY_NAME: "nyx"
      REPOSITORY_OWNER: "mooltiverse"
resume: true
stateFile: "build/.nyx-state.json"
substitutions: 
  enabled: 
    - jekyll-data
  items: 
    jekyll-data: 
      files: "docs/_data/nyx.yml"
      match: "version(\\s)*:(\\s)*\"(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?\""
      replace: "version: \"{{version}}\""
